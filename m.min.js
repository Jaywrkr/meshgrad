"use strict";
const g = [
  {
    img: "1.png",
    hash:
      "?w=eyJzIjpbWy0wLjIzMDk1MjM4MDk1MjM4MDksLTAuMTc3Nzc3Nzc3Nzc3Nzc3OF0sWzAuNzU0NzYxOTA0NzYxOTA1LC0wLjg2ODI1Mzk2ODI1Mzk2ODNdLFswLjMyMzAxNTg3MzAxNTg3MywwLjg5OTk5OTk5OTk5OTk5OTldLFswLjY5NDc2ODcwOTM5NDMyNTgsMC4wMDA1OTczNDEwMjEyODIyODI3XSxbLTAuNzQ5ODIzMjc0ODcxMzk2LDEuNzk5NDI4ODY4MTk1ODM2OF0sWy0wLjU0Mzc2MjgwNTIxMjA3MTEsMC41ODUwMDY0MTM1ODM0MDkzXSxbMC42NjcyMDUzNTQ1NjYxMTI2LC0wLjE3ODg0MjQ5NTkxOTE3NzVdLFswLjY2NzIwNTM1NDU2NjExMjYsLTAuMTc4ODQyNDk1OTE5MTc3NV0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF1dLCJkIjpbWy0wLjg1NzkzNjUwNzkzNjUwNzYsLTAuNzQ5MjA2MzQ5MjA2MzQ5MV0sWzAuODUsLTAuOV0sWzAuOTE4MjUzOTY4MjUzOTY5LDAuNjE0Mjg1NzE0Mjg1NzE1XSxbLTAuMTkwNDc2MTkwNDc2MTkwMDIsMC4yMjIyMjIyMjIyMjIyMjI1NF0sWzAuNTM5NjgyNTM5NjgyNTM5NSwwLjg4ODg4ODg4ODg4ODg4OTFdLFstMC4yMjIyMjIyMjIyMjIyMjIyLDAuMjg1NzE0Mjg1NzE0Mjg1Nl0sWy0wLjAwNzkzNjUwNzkzNjUwNzkwOCwtMC40NjAzMTc0NjAzMTc0NjAzNV0sWzAuMDE1ODczMDE1ODczMDE1ODE3LC0wLjM2NTA3OTM2NTA3OTM2NTFdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6N30%3D&c=eyJ0bCI6IiNiN2RiZjkiLCJ0ciI6IiNhYTRjZDkiLCJibCI6IiNmZmY5YmYiLCJiciI6IiNmOGEwOTcifQ%3D%3D"
  },
  {
    img: "2.png",
    hash:
      "?w=eyJzIjpbWzAuMjEyMzQ0MTM5NjUwODcyNzMsMC4yMjIxOTQ1MTM3MTU3MTA2NF0sWzAuNDA2NjA4NDc4ODAyOTkyNTYsLTAuNTI2NDMzOTE1MjExOTddLFswLjg1LC0wLjldLFswLjM0NjUwODcyODE3OTU1MTE0LC0wLjA5MjUxODcwMzI0MTg5NTI2XSxbLTAuNDEwMTIyODI4MzM3MzU0NiwxLjE4NzA3MjMwOTA5NDU1OTRdLFstMC41NzYwNTk4NTAzNzQwNjQ4LC0wLjYwODQ3ODgwMjk5MjUxODhdLFstMC40ODIyOTg1NzY0ODgzNTk1LDAuMDcwMTEzNTQ4ODc3NjMxNjZdLFstMC4yNDE0NjQzNzAwNjQ2MzQwNiwtMC45MDk4MzY0NTcyNTc5ODc4XSxbMC4xNzgxNjUyOTE5MzM5MDM4NSwwLjE3NTMwOTMwNDM5MDI2MTE2XSxbMC4xNzgxNjUyOTE5MzM5MDM4NSwwLjE3NTMwOTMwNDM5MDI2MTE2XSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXV0sImQiOltbLTAuNzMwMjk5MjUxODcwMzI0MiwtMC44NDAxNDk2MjU5MzUxNjI1XSxbLTAuOTUsMC45XSxbMC43NzUxODcwMzI0MTg5NTMxLC0wLjk0NDg4Nzc4MDU0ODYyODJdLFswLjc3MDQ0ODg3NzgwNTQ4NjUsLTAuMzQxODk1MjYxODQ1Mzg2Ml0sWzAuODQ1Mzg2NTMzNjY1ODM1NSwwLjc4MzA0MjM5NDAxNDk2MjddLFswLjE2NDA3ODg4NTU2OTUyNjMyLC0wLjU2NjUyMTIwMjYwOTE3MTNdLFswLjA2NzMzMTY3MDgyMjk0MjY3LDAuNzQ4MTI5Njc1ODEwNDczOF0sWzAuNTAxMjQ2ODgyNzkzMDE3OSwtMC44NTc4NTUzNjE1OTYwMDk4XSxbMC40NTYzNTkxMDIyNDQzODkxNCwtMC4yNTY4NTc4NTUzNjE1OTZdLFswLjUzMTE3MjA2OTgyNTQzNjUsLTAuMTEyMjE5NDUxMzcxNTcxMDhdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6OX0%3D&c=eyJ0bCI6IiM5YzZhZjkiLCJ0ciI6IiNmOWRhNzMiLCJibCI6IiNmYTgyODIiLCJiciI6IiNmZDQzODIifQ%3D%3D"
  },
  {
    img: "3.png",
    hash:
      "w=eyJzIjpbWy0wLjk1LDAuOV0sWzAuODUsLTAuOV0sWzAuMjg4NTc0MzI4ODQ3NTQzNSwtMC4wNjc2NTE2OTk0MDMyNDAxMl0sWy0wLjExMTM2NDA2MjAxNzAzMzMsMC45OTcxMDE4MzcxNDUzNTJdLFsxLjAxMjgxNDI4OTYzMDc5ODEsMC4yOTE2NTkwNTM3NTYxOTY2XSxbLTAuNDcyNTc2MDU5OTM0MTc1MywwLjM3Nzc1OTU1NDQxNjY0MTldLFswLjI4MDA5MzQ3ODUyMTA2NjgsLTAuNTU4NDMzNjI0OTM0NzU0XSxbMC4xMDI0NTc1NjM1MzAzNzQyMiwtMC4xNDUzMTIwNTc5NzAyNTIzN10sWy0wLjQyMDg4ODQ4ODMxMzI1MDksMC41NzQ1MzA1MTkyNzg5Nzk0XSxbLTAuODIzNTI5NDExNzY0NzA1OCwtMC43NjE0Mzc5MDg0OTY3MzJdLFstMC44MjM1Mjk0MTE3NjQ3MDU4LC0wLjc2MTQzNzkwODQ5NjczMl0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF1dLCJkIjpbWy0wLjcyNzc3Nzc3Nzc3Nzc3OCwwLjg0MTE3NjQ3MDU4ODIzNTJdLFswLjc1MTk2MDc4NDMxMzcyNSwtMC44MzQ2NDA1MjI4NzU4MTcxXSxbLTAuNzkwODQ5NjczMjAyNjE0LDAuNzQxODMwMDY1MzU5NDc2OV0sWy0wLjEwNzQyMTA3NDIxMDc0MjMyLC0wLjM3NDkwMDUxMzcxMTAxOTRdLFswLjg4OTUxNTk1Mzk4MzA2OTMsMC4yNzU0ODY1NzgzOTUxOTU4Nl0sWzAuNTQzOTc4OTY5MjAxNDU3MiwwLjA2MzUzODU3NjU2MjIzNTgzXSxbLTAuMjAyNjE0Mzc5MDg0OTY3NiwtMC44NTk0NzcxMjQxODMwMDY4XSxbLTAuNDQ0NDQ0NDQ0NDQ0NDQ0NCwwLjE1MzU5NDc3MTI0MTgyOTk2XSxbLTAuMTI3NTM1MzkzMDAwOTg4ODIsMC41MjQzODMxODUwMDgzMjA3XSxbLTAuNDcwNzY3NTU5NDI2MTUzNDUsLTAuMjIzNDY2NjEyODgyOTIwMTNdLFstMC40NzA3Njc1NTk0MjYxNTM0NSwtMC4yMjM0NjY2MTI4ODI5MjAxM10sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF1dLCJwIjoxMH0%3D&c=eyJ0bCI6IiNGREFCODgiLCJ0ciI6IiNEQjBDMzYiLCJibCI6IiNFQUQyOTIiLCJiciI6IiM3RUIxQTgifQ%3D%3D"
  },
  {
    img: "4.png",
    hash:
      "?w=eyJzIjpbWzAuODUsLTAuOV0sWzAuODMwMzA4ODgwMzA4ODgwMSwwLjg4ODQxNjk4ODQxNjk4ODZdLFstMS41NzMzODcyNTY0MDM0MDY0LC0wLjg1NzQyODk2NzI1NDIzNTldLFstMC4yMjM5MzgyMjM5MzgyMjM5MywtMC4wMTkzMDUwMTkzMDUwMTkzNzddLFswLjIxODY4MzQ3MjgzNzEyMjUzLDAuMTQyOTU5MjIyMTgyMDQxMDVdLFswLjk1NDMxNTcyNjgwMDE1OSwwLjUzNTE3NDQ3NDExNDUwMjRdLFsxLjM1NzIzMjUxOTA3MjM4ODQsMC4yNTM5NTc0OTI0MzA0MDI5XSxbMS4xMDA3MjI0MzI3ODUxMDY2LC0wLjYzNTg4NzUwNzA0MDA2MjJdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1swLjc5NTk0NTk0NTk0NTk0NTcsMC40NzgzNzgzNzgzNzgzNzg0XSxbLTAuNjQ0NTk0NTk0NTk0NTk0OSwwLjgzNDM2MjkzNDM2MjkzNDRdLFstMC44MjYyNTQ4MjYyNTQ4MjYyLC0wLjc0OTAzNDc0OTAzNDc0OTFdLFswLjYxODg2MTE3ODI2NjI1MTQsLTAuNjE2MzU5NDc4Njk5ODc1MV0sWy0wLjkzNDM2MjkzNDM2MjkzNDMsMC4wNDYzMzIwNDYzMzIwNDYyNF0sWy0wLjM1OTA3MzM1OTA3MzM1OSwtMC4xOTY5MTExOTY5MTExOTY5Nl0sWy0wLjI4NTcxNDI4NTcxNDI4NTcsMC44ODgwMzA4ODgwMzA4ODhdLFswLjAzNDc0OTAzNDc0OTAzNDY4LDAuMTExOTY5MTExOTY5MTExOTddLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6OH0%3D&c=eyJ0bCI6IiNjZGVlZjMiLCJ0ciI6IiNmZmVlZTUiLCJibCI6IiNmN2JmZDQiLCJiciI6IiNjMWVjZjMifQ%3D%3D"
  },
  {
    img: "5.png",
    hash:
      "?w=eyJzIjpbWy0wLjg1LC0wLjldLFswLjE1NDY3Mjg5NzE5NjI2MTY1LC0wLjcwOTM0NTc5NDM5MjUyMzRdLFswLjk1LDAuOV0sWzAuMTQ1MTMyNzU4ODAxOTIwNjcsMC4wNTk3NTU3MjQ4NzQwOTUxOTVdLFstMC4zMjE5NjgwMzA2MzU3MTg1NSwxLjAxMzM3MDg3MzAyMjEyNF0sWzAuNjg2NjIzMTkzOTkxODExNSwtMC4zMDQxODQ1MzA2NDM4MzYyXSxbMC43MjcxMDI4MDM3MzgzMTc4LDAuMTg1MDQ2NzI4OTcxOTYyNF0sWy0wLjIzNTAxOTYwMjYxNjYwMzUsLTAuMjQ0NTA1OTIwNjM5MDU1ODVdLFstMC4zMzY3NzI4NjkxMDk3NjQ2NywtMC44MzE2MTYxMjg4NDcwMjcyXSxbMC4zNTYyOTY1MjY2NTgzMjQ4LDAuMTU2Mzk5MTEyODEzODE4OV0sWzAuMzU2Mjk2NTI2NjU4MzI0OCwwLjE1NjM5OTExMjgxMzgxODldLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1stMC43NDE1ODg3ODUwNDY3MjkxLC0wLjk3MTAyODAzNzM4MzE3NzhdLFswLjU1ODQxMTIxNDk1MzI3MSwtMC44MjUyMzM2NDQ4NTk4MTMyXSxbMC4xNDYyNjE2ODIyNDI5OTA1MiwwLjc2OTE1ODg3ODUwNDY3M10sWzAuMTg1MDQ2NzI4OTcxOTYyMjgsMC43MTk2MjYxNjgyMjQyOTg4XSxbLTAuNjgyMjQyOTkwNjU0MjA1NSwwLjExMDI4MDM3MzgzMTc3NTM2XSxbMC45MjUyMzM2NDQ4NTk4MTMxLDAuODkxNTg4Nzg1MDQ2NzI5XSxbLTAuNzUxNjUxMzM2ODU3MzkwNSwwLjgyODYwMjc4MzA5Njk2NzhdLFswLjQwNTYwNzQ3NjYzNTUxMzU1LDAuMjAzNzM4MzE3NzU3MDA5MTJdLFswLjQ0Mjk5MDY1NDIwNTYwNzI0LC0wLjMxOTYyNjE2ODIyNDI5OTIzXSxbLTAuODg0MTEyMTQ5NTMyNzEwMSwtMC41NjYzNTUxNDAxODY5MTU4XSxbLTAuODg0MTEyMTQ5NTMyNzEwMSwtMC41NjYzNTUxNDAxODY5MTU4XSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXV0sInAiOjEwfQ%3D%3D&c=eyJ0bCI6IiNmZmE1ZWEiLCJ0ciI6IiNmOGRmZDgiLCJibCI6IiM0NWRmZjgiLCJiciI6IiNiYzhkZWIifQ%3D%3D"
  },
  {
    img: "6.png",
    hash:
      "?w=eyJzIjpbWy0wLjg1LC0wLjldLFswLjYyMzgzMTc3NTcwMDkzNDYsMC42NzE5NjI2MTY4MjI0Mjk1XSxbMC42MTA3NDc2NjM1NTE0MDE4LDAuNzA3NDc2NjM1NTE0MDE4N10sWzAuOTEyNjE2ODIyNDI5OTA2NSwtMC45MjQyOTkwNjU0MjA1NjA3XSxbLTAuMTU4NjI0OTYyNTU3MDk4NTcsMC44MjUyODMzOTg2ODc2NTkxXSxbLTAuNjQ0ODU5ODEzMDg0MTEyMSwwLjEyMTQ5NTMyNzEwMjgwMzc1XSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXV0sImQiOltbLTAuNjQ4MTMwODQxMTIxNDk1MiwtMC43MDkzNDU3OTQzOTI1MjM0XSxbLTAuODExNjgyMjQyOTkwNjU0MSwwLjgyNTIzMzY0NDg1OTgxM10sWzAuNzMwMzczODMxNzc1NzAwNSwtMC44NzAwOTM0NTc5NDM5MjUyXSxbLTAuNjY4NjkxNTg4Nzg1MDQ2OSwtMC43MjYxNjgyMjQyOTkwNjU1XSxbMC42MTQ5NTMyNzEwMjgwMzc0LDAuNTM2NDQ4NTk4MTMwODQxMV0sWzAuMDcxMjU5MTEzNTkwMTExOTQsLTAuMDU1Njk0Njk1MDQxMjgzODhdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6Nn0%3D&c=eyJ0bCI6IiNmZjMwMmMiLCJ0ciI6IiM2ODhjZTkiLCJibCI6IiNmMGE3ODkiLCJiciI6IiMxZGQzZmUifQ%3D%3D"
  },
  {
    img: "7.png",
    hash:
      "?w=eyJzIjpbWzAuMzM4Nzg1MDQ2NzI4OTcyMDMsMC4wNzk0MzkyNTIzMzY0NDg0NF0sWy0wLjk1LDAuOV0sWzAuODUsLTAuOV0sWzAuOTUsMC45XSxbMC4wODU1NDIzODgwNDc2ODU1NSwtMC4xMjg5MDE3NTk1MTUxNTExNV0sWzEuMDQxNDU4NzQwNjI3MjMxMywtMC4yMzMyMzg5OTkwODY3NTcyMV0sWy0wLjExNTI3MzcwMTg5OTU0ODQ0LDAuMTE3OTg1MDUyMDU1MjE1OTJdLFstMC42MTY4MjExMTcxNzUwMDk2LDAuMDQ4MjUxNjMyNDgyMjIxNTNdLFstMC4yMTc0OTc4NDg2NzcxNzI5MiwtMC4wNzczMDQ2NTg4MDIzNzUyNV0sWy0xLjA5NTU5OTQxMDQwNzcwNywwLjM3NzA4NzQyOTY3MzIxMjVdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1stMC45MDIzMzY0NDg1OTgxMzA5LC0wLjkwMzczODMxNzc1NzAwOTNdLFstMC45NSwwLjldLFswLjc2NDAxODY5MTU4ODc4NDgsLTAuODY2MzU1MTQwMTg2OTE2MV0sWzAuODE1NDIwNTYwNzQ3NjYzNCwwLjUzMzY0NDg1OTgxMzA4NDFdLFstMC43OTQzOTI1MjMzNjQ0ODYsMC43MjcxMDI4MDM3MzgzMTc4XSxbMC42MzczODMxNzc1NzAwOTMzLDAuMjY3Mjg5NzE5NjI2MTY4M10sWzAuNjI2MTY4MjI0Mjk5MDY1NCwwLjI3ODUwNDY3Mjg5NzE5NjA1XSxbMC43MzA4NDExMjE0OTUzMjcsLTAuOTA2NTQyMDU2MDc0NzY2M10sWy0wLjM3NTcwMDkzNDU3OTQzOTMsLTAuNjA3NDc2NjM1NTE0MDE4OF0sWzAuODU3OTQzOTI1MjMzNjQ0OSwtMC45NzAwOTM0NTc5NDM5MjUyXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXV0sInAiOjl9&c=eyJ0bCI6IiNlYWVhMmQiLCJ0ciI6IiNmZDViNmMiLCJibCI6IiNlOGJjZmIiLCJiciI6IiNmYjhjZGIifQ%3D%3D"
  },
  {
    img: "8.png",
    hash:
      "?w=eyJzIjpbWy0wLjg1LC0wLjldLFswLjg1LC0wLjldLFswLjk1LDAuOV0sWy0wLjk1MDA3NjQyNDIwMjI1MzcsMC45MTgwNTAyODg5ODMwMDMzXSxbMC40NTg1NDQ4MzkyNTU0OTkxNiwwLjg0NzcxNTczNjA0MDYwOTFdLFswLjAxNzcxMjI3OTEyMTk1NzA1MywtMS4wOTU0ODg4NjA2Mzg3MDEyXSxbLTAuNTcwMjEwODE1MTE0NDM2LDAuOTk5MzQwNzUwOTA4NjEzMl0sWy0wLjIyNTYzODM1MzY5OTM0ODQ4LDEuMDQ1OTE5NzU4MzQxNzg3NF0sWzAuMjIyNTI2NjYxNzk3ODE0MSwwLjMzNDQxMDY1MTQ4MTkwMDEzXSxbLTAuMjQ3NzQ5MjA5ODM3MDYyNiwwLjI2OTc1MTUzNDQ5MjQyODZdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1swLjEzODE1NTY2ODM1ODcxNDUsLTAuMjEzMDI4NzY0ODA1NDE0NzddLFstMC4yNTY1OTg5ODQ3NzE1NzM1LDAuODYzMTEzMzY3MTc0MjgwOF0sWy0wLjczODY2MzI4MjU3MTkxMTYsMC4xNjU2NTE0MzgyNDAyNzA5NV0sWy0wLjYyMDk4MTM4NzQ3ODg0OTMsLTAuMzYzNzkwMTg2MTI1MjExNV0sWzAuMzAxMjcwNTk2NjMyMjU2MSwwLjI0NjY3NDYzNzAyNTk0NjgzXSxbMC42NTE0MzgyNDAyNzA3Mjc1LDAuOTU5MzkwODYyOTQ0MTYyNV0sWy0wLjc4MDAzMzg0MDk0NzU0NjYsMC4wNDIzMDExODQ0MzMxNjQyMl0sWy0wLjA5MzA2MjYwNTc1Mjk2MDk5LC0wLjUzMjk5NDkyMzg1Nzg2OF0sWy0wLjQzMTQ3MjA4MTIxODI3NDEsMC4yNjkwMzU1MzI5OTQ5MjM4XSxbMC4xMTMzNjcxNzQyODA4ODAwNiwwLjUxNjA3NDQ1MDA4NDYwMjRdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6MTB9&c=eyJ0bCI6IiMwMGMyZjciLCJ0ciI6IiNmZjAwZmYiLCJibCI6IiNlYmRkZmYiLCJiciI6IiNmZjAwMjEifQ%3D%3D"
  },
  {
    img: "9.png",
    hash:
      "?w=eyJzIjpbWy0wLjg1LC0wLjldLFswLjg1LC0wLjldLFswLjk1LDAuOV0sWzAuMTEzNDYwNjIzNDA2MDM5MTMsLTAuMTUzMDA1MzQxNDIxOTI2MTJdLFstMC45NzQxNjk3NDE2OTc0MTY5LC0wLjE0NzYwMTQ3NjAxNDc2MDE1XSxbLTAuNjAxNDc2MDE0NzYwMTQ3NCwwLjI5NTIwMjk1MjAyOTUyMDNdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1swLjA1MDM2OTAwMzY5MDAzNzE2LC0wLjAyMTc3MTIxNzcxMjE3NzE2XSxbLTAuMzA4NjcxNTg2NzE1ODY3MjUsLTAuNzg5Mjk4ODkyOTg4OTMwMV0sWzAuMDQyMjUwOTIyNTA5MjI1MTMsLTAuMDMzNTc5MzM1NzkzMzU3ODFdLFstMC45MTUxMjkxNTEyOTE1MTI4LDAuNjgyNjU2ODI2NTY4MjY2XSxbLTAuMDMxOTIwOTgxOTA0MDQyMjQ1LDAuNjQxOTUwNzAyODU1ODU5MV0sWzAuODMzNjY5MjkzNjM0OTMyMywwLjgzNTM3Mzc5MzIxMTE0NTFdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6NX0%3D&c=eyJ0bCI6IiM3YjcwZmYiLCJ0ciI6IiNmZmI0ZmYiLCJibCI6IiM4MWFlZmYiLCJiciI6IiNmZmM1ZWIifQ%3D%3D"
  },
  {
    img: "10.png",
    hash:
      "?w=eyJzIjpbWzAuODM0MTc5MzU3MDIxOTk2NiwwLjgwNzEwNjU5ODk4NDc3MTRdLFstMC45Njk1NDMxNDcyMDgxMjE2LC0wLjk3NjMxMTMzNjcxNzQyODFdLFstMC41MzI5OTQ5MjM4NTc4NjgxLC0wLjA2OTM3Mzk0MjQ3MDM4OTJdLFswLjYwNzQ0NTAwODQ2MDIzNjcsMC4xMjY5MDM1NTMyOTk0OTI0M10sWzAuNjE3NTk3MjkyNzI0MTk2MiwtMC43NzMyNjU2NTE0MzgyNDAzXSxbLTEuNjA3MjUzNjQxNDg1NTM0NSwyLjgxMTUzNDEyNjcxOTIyMV0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF1dLCJkIjpbWzAuMDM1NTMyOTk0OTIzODU4MDg2LC0wLjk0MjQ3MDM4OTE3MDg5NjVdLFswLjAzNTUzMjk5NDkyMzg1Nzg2NCwtMC45Mjg5MzQwMTAxNTIyODQzXSxbMC4wMzg5MTcwODk2Nzg1MTA4MiwtMC4xNTA1OTIyMTY1ODIwNjQzNF0sWzAuMDQ1Njg1Mjc5MTg3ODE3NTEsLTAuNDg1NjE3NTk3MjkyNzI0MTNdLFstMC4wMzQxNTkwMTUxNzg0MDIyOCwwLjg1NjE4Njk1MDAxNjYxMzNdLFswLjI2OTAzNTUzMjk5NDkyMzksMC41MDI1MzgwNzEwNjU5ODk3XSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXSxbMCwwXV0sInAiOjR9&c=eyJ0bCI6IiNmZjY5YmEiLCJ0ciI6IiNmZmI0ZmYiLCJibCI6IiNmOWY4NmEiLCJiciI6IiNmZjg4OTcifQ%3D%3D"
  },
  {
    img: "11.png",
    hash:
      "?w=eyJzIjpbWy0wLjk4NzIyNTA0MjMwMTE4NDcsMC45Nzc4MzQxNzkzNTcwMjI0XSxbMC44NSwtMC45XSxbLTAuNDg0NDkwNjQzNjk5NzM0OCwxLjEzNDE3NTE1NjYxMjIwNDJdLFswLjA0NTY4NTI3OTE4NzgxNzI4NSwwLjM0MDEwMTUyMjg0MjYzOTZdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1stMS4wMTQyOTc4MDAzMzg0MDg5LDAuOTQ3Mzc3MzI2NTY1MTQ0Nl0sWzAuMTkzNDg1NjE3NTk3MjkyNjYsLTAuMDIzNTE5NDU4NTQ0ODM5MDU2XSxbMC44MjQwMjcwNzI3NTgwMzc0LC0wLjg1Nzg2ODAyMDMwNDU2ODddLFswLjgwMzcyMjUwNDIzMDExODYsMC4yMjUwNDIzMDExODQ0MzMxNF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF0sWzAsMF1dLCJwIjo0fQ%3D%3D&c=eyJ0bCI6IiMwMDAyMzciLCJ0ciI6IiNmZmVlNDgiLCJibCI6IiM4N2JhZmYiLCJiciI6IiMwMDAxMWUifQ%3D%3D"
  },
  {
    img: "12.png",
    hash:
      "?=eyJ0bCI6IiMzOTExMDAiLCJ0ciI6IiNmZjAwMDAiLCJibCI6IiMxZjAwMDgiLCJiciI6IiMyMDAwMDgifQ%3D%3D&w=eyJzIjpbWzAuNzcyNTA5MjI1MDkyMjUxMiwtMC45MDczODAwNzM4MDA3MzgyXSxbMC45Mjc4NTk3Nzg1OTc3ODYsMC45NDc5NzA0Nzk3MDQ3OTddLFswLjc3MzYxNDg0MDU3NzUxMTIsMC44ODMwNzYzMDQ0NTMxMzk2XSxbMC41OTg2NjE1NDcxMTU2Nzc5LDEuMDAzOTAzMzc0MTkwMTEzXSxbMC4wNTUxODUxOTM4NTEwNTcyNDYsLTAuMTczODMwMjg0NjQ2ODc4MDVdLFswLjY0ODkwODc5ODkyOTcwNzEsLTAuNDY0MjUwNDE1NDM5MDE2MzVdLFswLjAyNjQ4MDYwOTU4MjQ5MjU0MiwtMC4yMzM3NDE2NTcwMzYwNjI2NF0sWzAuNDExMjYzNzEzMzQyMDY0LC0wLjI5MDYzMDQ0MDYwMTYyODI0XSxbMC43NDI5OTUyODg1NjU2NjM0LC0wLjQ0MzQ2MjEwMjU0MzkzNDVdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwiZCI6W1swLjA3MTQwMjIxNDAyMjE0MDQyLDAuMjI1NDYxMjU0NjEyNTQ2NF0sWzAuMDYwNzAxMTA3MDExMDcwMTIsMC4yMTczNDMxNzM0MzE3MzQ2XSxbMC4wOTIyNTA5MjI1MDkyMjU0LDAuMjE3NzEyMTc3MTIxNzcxMTZdLFswLjA4ODU2MDg4NTYwODg1NjExLC0wLjMyODQxMzI4NDEzMjg0MTFdLFstMC4xNDc2MDE0NzYwMTQ3NTk5MiwtMC4zNTc5MzM1NzkzMzU3OTI4NF0sWy0wLjM5ODUyMzk4NTIzOTg1MTksMC4zNTc5MzM1NzkzMzU3OTQwNl0sWzAuMjY5MzcyNjkzNzI2OTM3NCwtMC4zOTExNDM5MTE0MzkxMTQzXSxbMC41NzU2NDU3NTY0NTc1NjQ2LDAuMjIxNDAyMjE0MDIyMTQwMzNdLFswLjQ3NjAxNDc2MDE0NzYwMTQ3LDAuMzA5OTYzMDk5NjMwOTk2NTVdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdLFswLDBdXSwicCI6OH0%3D"
  }
];
function HSLtoRGB(s, M, t) {
  let e, w, L;
  const D = s => Math.floor(Math.max(Math.min(256 * s, 255), 0)),
    i = (s, M, t) => (
      t < 0 && (t += 1),
      t > 1 && (t -= 1),
      t < 1 / 6
        ? s + 6 * (M - s) * t
        : t < 0.5
        ? M
        : t < 2 / 3
        ? s + (M - s) * (2 / 3 - t) * 6
        : s
    ),
    r = t < 0.5 ? t * (1 + M) : t + M - t * M,
    N = 2 * t - r;
  return (
    (e = i(N, r, s + 1 / 3)),
    (w = i(N, r, s)),
    (L = i(N, r, s - 1 / 3)),
    [D(e), D(w), D(L)]
  );
}
function RGBtoHex(s, M, t) {
  return `#${s.toString(16)}${M.toString(16)}${t.toString(16)}`;
}
const randomColor = () => {
  const s = Math.random(),
    M =
      (Math.floor(360 * s),
      HSLtoRGB(s, 1, 0.01 * (Math.floor(16 * Math.random()) + 75)));
  return RGBtoHex(M[0], M[1], M[2]);
};
function getRelativeMousePosition(s, M) {
  var t = (M = M || s.target).getBoundingClientRect();
  return { x: s.clientX - t.left, y: s.clientY - t.top };
}
function getNoPaddingNoBorderCanvasRelativeMousePosition(s, M) {
  var t = getRelativeMousePosition(s, (M = M || s.target));
  return (
    (t.x = (t.x * M.width) / M.clientWidth),
    (t.y = (t.y * M.height) / M.clientHeight),
    t
  );
}
let image,
  warps,
  src_c,
  dst_c,
  texture,
  MAX_POINTS = 32,
  colors = {
    tl: randomColor(),
    tr: randomColor(),
    bl: randomColor(),
    br: randomColor()
  };
function load_resource(s) {
  let M = new XMLHttpRequest();
  return (
    M.open("GET", s, !1),
    M.overrideMimeType("text/plain; charset=x-user-defined"),
    M.send(null),
    200 != M.status && 0 != M.status ? null : M.responseText
  );
}
function load_source(s) {
  let M = document.getElementById(s);
  if (!M) throw Error("element '" + s + "' not found");
  return M.hasAttribute("src") ? load_resource(M.src) : M.text;
}
function Warp(s, M, t, e) {
  (this.parent = s),
    (this.which = M),
    (this.src = t),
    (this.dst = e),
    (this.s2 = []),
    (this.w = []);
  for (let s = 0; s < MAX_POINTS; s++) this.s2.push(0), this.w.push([0, 0]);
}
function linsolve(s, M) {
  let t = s.length,
    e = s[0].length,
    w = M[0].length;
  for (let L = 0; L < e - 1; L++) {
    let D = L,
      i = D + 1,
      r = Math.abs(s[D][L]),
      N = D;
    for (let M = D + 1; M < t; M++) {
      let t = Math.abs(s[M][L]);
      r < t && ((r = t), (N = M));
    }
    if (N != D) {
      let t = s[D];
      (s[D] = s[N]), (s[N] = t);
      let e = M[D];
      (M[D] = M[N]), (M[N] = e);
    }
    for (let r = i; r < t; r++) {
      let t = s[D][L],
        i = s[r][L];
      for (let M = L; M < e; M++) s[r][M] = t * s[r][M] - i * s[D][M];
      for (let s = 0; s < w; s++) M[r][s] = t * M[r][s] - i * M[D][s];
    }
  }
  for (let e = t - 1; e >= 0; e--) {
    for (let L = t - 1; L > e; L--) {
      let t = s[e][L];
      s[e][L] = 0;
      for (let s = 0; s < w; s++) M[e][s] -= t * M[L][s];
    }
    for (let t = 0; t < w; t++) M[e][t] /= s[e][e];
    s[e][e] = 1;
  }
  return M;
}
function Warps(s = [], M = [], t = 0) {
  (this.npoints = t), (this.src = s), (this.dst = M);
  for (let s = t; s < MAX_POINTS; s++)
    this.src.push([0, 0]), this.dst.push([0, 0]);
  this.src.map(s =>
    "number" != typeof s[0] || "number" != typeof s[1] ? [0, 0] : s
  ),
    this.dst.map(s =>
      "number" != typeof s[0] || "number" != typeof s[1] ? [0, 0] : s
    ),
    (this.warps = [
      new Warp(this, 0, this.src, this.dst),
      new Warp(this, 1, this.dst, this.src)
    ]);
}
function Canvas(s, M, t, e) {
  (this.warp = s),
    (this.id = t),
    (this.canvas = M),
    M.setAttribute("tabIndex", s.which + 1),
    (this.ctx = M.getContext("webgl", { preserveDrawingBuffer: !0 })),
    (this.isClone = e),
    (this.errors = null),
    (this.texture = null),
    (this.position_buffer = null),
    (this.texcoord_buffer = null),
    (this.index_buffer = null),
    (this.num_indices = null),
    (this.warp_program = null),
    (this.drag = null),
    (this.radius = 10),
    this.setup();
}
function flatten(s, M) {
  if (!M) return s;
  let t = [];
  for (let e = 0; e < s.length; e++) {
    let w = s[e];
    M > 1 && (w = flatten(w, M - 1));
    for (let s = 0; s < w.length; s++) t.push(w[s]);
  }
  return t;
}
function refresh() {
  (colors.tl = randomColor()),
    (colors.tr = randomColor()),
    (colors.bl = randomColor()),
    (colors.br = randomColor()),
    updateColors(),
    updateUrl(),
    redraw();
}
function clearUrl() {
  window.history.replaceState({}, "/", (location.hostname, "/")), init();
}
(Warp.prototype = new Object()),
  (Warp.prototype.npoints = function() {
    return this.parent.npoints;
  }),
  (Warp.prototype.get_src = function() {
    let s = this.src.slice(0, this.npoints());
    for (let M = 0; M < s.length; M++) s[M] = s[M].slice();
    return s;
  }),
  (Warp.prototype.get_dst = function() {
    let s = this.dst.slice(0, this.npoints());
    for (let M = 0; M < s.length; M++) s[M] = s[M].slice();
    return s;
  }),
  (Warp.prototype.distance_squared = function(s, M, t) {
    if (t) {
      let M = [];
      for (let t = 0; t < s.length; t++) {
        let e = [];
        for (let M = 0; M < s.length; M++)
          e.push(s[t][0] * s[M][0] + s[t][1] * s[M][1]);
        M.push(e);
      }
      let t = [];
      for (let e = 0; e < s.length; e++) {
        let w = [];
        for (let t = 0; t < s.length; t++)
          w.push(M[e][e] + M[t][t] - 2 * M[e][t]);
        t.push(w);
      }
      return t;
    }
    {
      let t = [];
      for (let e = 0; e < s.length; e++) {
        let w = [];
        for (let t = 0; t < M.length; t++)
          w.push(s[e][0] * M[t][0] + s[e][1] * M[t][1]);
        t.push(w);
      }
      let e = [];
      for (let M = 0; M < s.length; M++)
        e.push(s[M][0] * s[M][0] + s[M][1] * s[M][1]);
      let w = [];
      for (let s = 0; s < M.length; s++)
        w.push(M[s][0] * M[s][0] + M[s][1] * M[s][1]);
      let L = [];
      for (let D = 0; D < s.length; D++) {
        let s = [];
        for (let L = 0; L < M.length; L++) s.push(e[D] + w[L] - 2 * t[D][L]);
        L.push(s);
      }
      return L;
    }
  }),
  (Warp.prototype.rbf = function(s, M, t) {
    let e = this.distance_squared(s, M, t);
    if (t) {
      let s = e[0][0];
      for (let M = 0; M < e.length; M++)
        for (let t = 0; t < e[M].length; t++) s < e[M][t] && (s = e[M][t]);
      let M = [];
      for (let t = 0; t < e.length; t++) {
        let w = [];
        for (let M = 0; M < e[t].length; M++) w.push(t == M ? s : e[t][M]);
        M.push(w);
      }
      for (let s = 0; s < M[0].length; s++) {
        let t = M[0][s];
        for (let e = 1; e < M.length; e++) t > M[e][s] && (t = M[e][s]);
        this.s2[s] = t;
      }
    }
    let w = [];
    for (let s = 0; s < e.length; s++) {
      let M = [];
      for (let t = 0; t < e[s].length; t++)
        M.push(Math.sqrt(e[s][t] + this.s2[t]));
      w.push(M);
    }
    return w;
  }),
  (Warp.prototype.update = function() {
    if (this.npoints() < 4) return;
    let s = this.get_src(),
      M = this.get_dst(),
      t = linsolve(this.rbf(s, s, !0), M);
    for (let s = 0; s < t.length; s++) this.w[s] = t[s];
  }),
  (Warp.prototype.warp = function(s) {
    if (this.npoints() < 4) return s.slice();
    let M = this.rbf(s, this.get_src()),
      t = [];
    for (let s = 0; s < M.length; s++) {
      let e = [];
      for (let t = 0; t < 2; t++) {
        let w = 0;
        for (let e = 0; e < M[s].length; e++) w += M[s][e] * this.w[e][t];
        e.push(w);
      }
      t.push(e);
    }
    return t;
  }),
  (Warps.prototype = new Object()),
  (Warps.prototype.update = function() {
    for (let s = 0; s < this.warps.length; s++) this.warps[s].update();
  }),
  (Warps.prototype.add = function(s, M, t, e, w) {
    if (w) {
      let w = s;
      (s = t), (t = w);
      let L = M;
      (M = e), (e = L);
    }
    (this.src[this.npoints] = [s, M]),
      (this.dst[this.npoints] = [t, e]),
      this.npoints++,
      this.update();
  }),
  (Warps.prototype.add_pair = function(s, M, t) {
    let e = s ? 1 : 0,
      w = this.warps[e].warp([[M, t]])[0],
      L = w[0],
      D = w[1];
    this.add(M, t, L, D, s);
  }),
  (Warps.prototype.delete = function(s) {
    for (let M = s; M < this.npoints - 1; M++)
      (this.src[M] = this.src[M + 1].slice()),
        (this.dst[M] = this.dst[M + 1].slice());
    this.npoints--, this.update();
  }),
  (Warps.prototype.removeAll = function() {
    for (let s = 0; s < this.npoints - 1; s++)
      (this.src[s] = [0, 0]), (this.dst[s] = [0, 0]);
    (this.npoints = 0), this.update();
  }),
  (Warps.prototype.setData = function(s, M, t) {
    for (let e = 0; e < MAX_POINTS; e++)
      e < t
        ? ((this.src[e] = s[e]), (this.dst[e] = M[e]))
        : ((this.src[e] = [0, 0]), (this.dst[e] = [0, 0]));
    (this.npoints = t), this.update();
  }),
  (Canvas.prototype.check_error = function() {
    let s = this.ctx;
    null == this.errors &&
      ((this.errors = {}),
      (this.errors[s.INVALID_ENUM] = "invalid enum"),
      (this.errors[s.INVALID_VALUE] = "invalid value"),
      (this.errors[s.INVALID_OPERATION] = "invalid operation"),
      (this.errors[s.OUT_OF_MEMORY] = "out of memory"));
    for (let M = 0; M < 10; M++) {
      let M = s.getError();
      if (0 == M) return;
      throw Error(this.errors[M]);
    }
  }),
  (Canvas.prototype.shader = function(s, M, t) {
    let e = this.ctx,
      w = e.createShader(M);
    if (
      (e.shaderSource(w, t),
      e.compileShader(w),
      !e.getShaderParameter(w, e.COMPILE_STATUS))
    )
      throw Error(s + ": " + e.getShaderInfoLog(w));
    return w;
  }),
  (Canvas.prototype.program = function(s, M, t) {
    let e = this.ctx,
      w = load_source(M),
      L = load_source(t),
      D = this.shader(s + ".vertex", e.VERTEX_SHADER, w),
      i = this.shader(s + ".fragment", e.FRAGMENT_SHADER, L),
      r = e.createProgram();
    if (
      (e.attachShader(r, D),
      e.attachShader(r, i),
      e.linkProgram(r),
      !e.getProgramParameter(r, e.LINK_STATUS))
    )
      throw new Error(e.getProgramInfoLog(r));
    return this.check_error(), r;
  }),
  (Canvas.prototype.setup_programs = function() {
    (this.warp_program = this.program("warp", "warp_vertex", "warp_fragment")),
      (this.point_program = this.program(
        "points",
        "point_vertex",
        "point_fragment"
      ));
  }),
  (Canvas.prototype.make_texture = function(s) {
    let M = this.ctx;
    return (
      (texture = M.createTexture()),
      M.pixelStorei(M.UNPACK_FLIP_Y_WEBGL, 1),
      M.bindTexture(M.TEXTURE_2D, texture),
      M.generateMipmap(M.TEXTURE_2D),
      M.texParameteri(M.TEXTURE_2D, M.TEXTURE_MAG_FILTER, M.LINEAR),
      M.texParameteri(
        M.TEXTURE_2D,
        M.TEXTURE_MIN_FILTER,
        M.LINEAR_MIPMAP_LINEAR
      ),
      M.texParameteri(M.TEXTURE_2D, M.TEXTURE_WRAP_S, M.CLAMP_TO_EDGE),
      M.texParameteri(M.TEXTURE_2D, M.TEXTURE_WRAP_T, M.CLAMP_TO_EDGE),
      this.check_error(),
      texture
    );
  }),
  (Canvas.prototype.destory = function() {
    this.ctx.deleteTexture(texture),
      this.ctx.deleteBuffer(this.position_buffer),
      this.ctx.deleteBuffer(this.texcoord_buffer),
      this.ctx.deleteBuffer(this.points_buffer),
      this.ctx.deleteBuffer(this.index_buffer);
  }),
  (Canvas.prototype.setup_buffers = function() {
    let s = this.ctx,
      M = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);
    (this.position_buffer = s.createBuffer()),
      s.bindBuffer(s.ARRAY_BUFFER, this.position_buffer),
      s.bufferData(s.ARRAY_BUFFER, M, s.STATIC_DRAW);
    let t = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);
    (this.texcoord_buffer = s.createBuffer()),
      s.bindBuffer(s.ARRAY_BUFFER, this.texcoord_buffer),
      s.bufferData(s.ARRAY_BUFFER, t, s.STATIC_DRAW),
      (this.points_buffer = s.createBuffer()),
      s.bindBuffer(s.ARRAY_BUFFER, this.points_buffer),
      s.bufferData(s.ARRAY_BUFFER, 2 * MAX_POINTS * 4, s.STATIC_DRAW),
      s.bindBuffer(s.ARRAY_BUFFER, null),
      (this.indices = new Uint16Array([0, 1, 2, 2, 3, 0])),
      (this.num_indices = this.indices.length),
      (this.index_buffer = s.createBuffer()),
      s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, this.index_buffer),
      s.bufferData(s.ELEMENT_ARRAY_BUFFER, this.indices, s.STATIC_DRAW),
      s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, null),
      this.check_error();
  }),
  (Canvas.prototype.set_uniform = function(s, M, t, e, w) {
    let L = this.ctx,
      D = L.getUniformLocation(s, M);
    if (0 == e) t.call(L, D, w);
    else {
      if (1 != e) throw new Error("invalid type");
      t.call(L, D, new Float32Array(w));
    }
  }),
  (Canvas.prototype.draw = function() {
    let s = this.ctx;
    if (
      (s.clearColor(0.5, 0.5, 1, 1),
      s.clear(s.COLOR_BUFFER_BIT),
      this.warp.npoints() >= 4)
    ) {
      s.useProgram(this.warp_program),
        this.set_uniform(
          this.warp_program,
          "u_color3",
          s.uniform1i,
          0,
          colors.tl.replace("#", "0x")
        ),
        this.set_uniform(
          this.warp_program,
          "u_color4",
          s.uniform1i,
          0,
          colors.tr.replace("#", "0x")
        ),
        this.set_uniform(
          this.warp_program,
          "u_color2",
          s.uniform1i,
          0,
          colors.br.replace("#", "0x")
        ),
        this.set_uniform(
          this.warp_program,
          "u_color1",
          s.uniform1i,
          0,
          colors.bl.replace("#", "0x")
        ),
        this.set_uniform(this.warp_program, "tex", s.uniform1i, 0, 0),
        this.set_uniform(
          this.warp_program,
          "warp",
          s.uniform1i,
          0,
          this.warp.which
        ),
        this.set_uniform(
          this.warp_program,
          "npoints",
          s.uniform1i,
          0,
          this.warp.npoints()
        ),
        this.set_uniform(
          this.warp_program,
          "points",
          s.uniform2fv,
          1,
          flatten(this.warp.src, 1)
        ),
        this.set_uniform(
          this.warp_program,
          "s2",
          s.uniform1fv,
          1,
          this.warp.s2
        ),
        this.set_uniform(
          this.warp_program,
          "w",
          s.uniform2fv,
          1,
          flatten(this.warp.w, 1)
        ),
        s.activeTexture(s.TEXTURE0);
      let M = s.getAttribLocation(this.warp_program, "a_Position"),
        t = s.getAttribLocation(this.warp_program, "a_TexCoord");
      s.enableVertexAttribArray(M),
        s.bindBuffer(s.ARRAY_BUFFER, this.position_buffer),
        s.vertexAttribPointer(M, 2, s.FLOAT, !1, 0, 0),
        s.enableVertexAttribArray(t),
        s.bindBuffer(s.ARRAY_BUFFER, this.texcoord_buffer),
        s.vertexAttribPointer(t, 2, s.FLOAT, !1, 0, 0),
        s.bindBuffer(s.ARRAY_BUFFER, null),
        s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, this.index_buffer),
        s.drawElements(s.TRIANGLES, this.num_indices, s.UNSIGNED_SHORT, 0),
        s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, null),
        s.disableVertexAttribArray(M),
        s.disableVertexAttribArray(t),
        s.useProgram(null);
    }
    if (this.warp.npoints() > 0 && !this.isClone) {
      s.useProgram(this.point_program),
        this.set_uniform(
          this.point_program,
          "radius",
          s.uniform1f,
          0,
          this.radius
        ),
        this.set_uniform(this.point_program, "color", s.uniform3fv, 0, [
          0,
          0,
          0
        ]);
      let M = s.getAttribLocation(this.point_program, "a_Position"),
        t = this.warp.get_src();
      s.enableVertexAttribArray(M),
        s.bindBuffer(s.ARRAY_BUFFER, this.points_buffer),
        s.bufferSubData(s.ARRAY_BUFFER, 0, new Float32Array(flatten(t, 1))),
        s.vertexAttribPointer(M, 2, s.FLOAT, !1, 0, 0),
        s.drawArrays(s.POINTS, 0, t.length),
        s.bindBuffer(s.ARRAY_BUFFER, null),
        s.disableVertexAttribArray(M),
        s.useProgram(null);
    }
    s.flush(), this.check_error();
  }),
  (Canvas.prototype.find_point = function(s, M, t, e) {
    let w = this.warp.get_src(),
      L = this.radius * this.radius;
    for (let D = 0; D < w.length; D++) {
      let i = (w[D][0] - s) / t,
        r = (w[D][1] - M) / e;
      if (i * i + r * r <= L) return D;
    }
    return null;
  }),
  (Canvas.prototype.mouse_down = function(s) {
    if (0 != s.button) return;
    let M = this.canvas.getBoundingClientRect();
    const t = {
      s: warps.src.map(s => [parseFloat(s[0]), parseFloat(s[1])]),
      d: warps.dst.map(s => [parseFloat(s[0]), parseFloat(s[1])]),
      p: warps.npoints
    };
    previousData.unshift(t),
      previousData.length > maxUndo && previousData.pop();
    let e = 2 / (M.right - M.left),
      w = 2 / (M.bottom - M.top),
      L = (s.clientX - M.left) * e - 1,
      D = (M.bottom - s.clientY) * w - 1,
      i = this.find_point(L, D, e, w);
    if (null == i)
      11 === warps.npoints
        ? alert(
            "You can not have more than 11 points. Please hold shift + left click to remove a point."
          )
        : warps.add_pair(this.warp.which, L, D);
    else if (s.shiftKey)
      4 === warps.npoints
        ? alert("You can not have less than 4 points.")
        : warps.delete(i);
    else {
      let s = this.warp.src[i];
      this.drag = [i, L, D, s[0], s[1]];
    }
    redraw();
  }),
  (Canvas.prototype.mouse_up = function(s) {
    updateUrl(),
      0 == s.button &&
        null != this.drag &&
        ((this.drag = null), warps.update(), redraw());
  });
let previousData = [];
const maxUndo = 20;
let redoData = [];
const acc = 3;
function updateUrl(s) {
  const M = s || {
      s: warps.src
        .filter(s => 0 !== s[0] || 0 !== s[1])
        .map(s => [
          parseFloat(s[0].toFixed(acc)),
          parseFloat(s[1].toFixed(acc))
        ]),
      d: warps.dst
        .filter(s => 0 !== s[0] || 0 !== s[1])
        .map(s => [
          parseFloat(s[0].toFixed(acc)),
          parseFloat(s[1].toFixed(acc))
        ]),
      p: warps.npoints
    },
    t = btoa(JSON.stringify(M)),
    e = new URLSearchParams(window.location.search);
  e.set("w", t);
  const w = btoa(JSON.stringify(colors));
  e.set("c", w),
    window.history.replaceState(
      {},
      (location.hostname, "/"),
      "?" + e.toString()
    );
}
function keypressFunction(s) {
  var M = window.event ? event : s;
  if (90 == M.keyCode && M.metaKey && M.shiftKey) {
    if (redoData.length > 0) {
      const s = {
          s: warps.src.map(s => [
            parseFloat(s[0].toFixed(acc)),
            parseFloat(s[1].toFixed(acc))
          ]),
          d: warps.dst.map(s => [
            parseFloat(s[0].toFixed(acc)),
            parseFloat(s[1].toFixed(acc))
          ]),
          p: warps.npoints
        },
        M = redoData.shift();
      previousData.unshift(s),
        warps.removeAll(),
        warps.setData(M.s, M.d, M.p),
        updateUrl(M),
        redraw();
    }
  } else if (
    90 == M.keyCode &&
    M.metaKey &&
    !M.shiftKey &&
    previousData.length > 0
  ) {
    const s = previousData.shift(),
      M = {
        s: warps.src.map(s => [
          parseFloat(s[0].toFixed(acc)),
          parseFloat(s[1].toFixed(acc))
        ]),
        d: warps.dst.map(s => [
          parseFloat(s[0].toFixed(acc)),
          parseFloat(s[1].toFixed(acc))
        ]),
        p: warps.npoints
      };
    redoData.unshift(M),
      warps.removeAll(),
      warps.setData(s.s, s.d, s.p),
      updateUrl(s),
      redraw();
  }
}
document.addEventListener("keydown", keypressFunction),
  (Canvas.prototype.mouse_move = function(s) {
    if (0 != s.button) return;
    if (null == this.drag) return;
    let M = this.canvas.getBoundingClientRect(),
      t = M.right - M.left,
      e = M.bottom - M.top,
      w = ((s.clientX - M.left) / t) * 2 - 1,
      L = ((M.bottom - s.clientY) / e) * 2 - 1,
      D = this.drag[0],
      i = this.drag[1],
      r = this.drag[2],
      N = this.drag[3] + w - i,
      d = this.drag[4] + L - r;
    (this.warp.src[D] = [N, d]), warps.update(), redraw();
  }),
  (Canvas.prototype.setup = function() {
    this.setup_programs(),
      this.setup_buffers(),
      (this.canvas.onmousedown = this.mouse_down.bind(this)),
      (this.canvas.onmouseup = this.mouse_up.bind(this)),
      (this.canvas.onmousemove = this.mouse_move.bind(this));
  });
let needsDraw = !1;
function redraw() {
  needsDraw = !0;
}
function loop(s) {
  needsDraw && (src_c.draw(), dst_c.draw(), clone.draw(), (needsDraw = !1)),
    requestAnimationFrame(loop);
}
function adjust() {
  const s = document.querySelector(".body"),
    M = document.getElementById("canvas1"),
    t = document.getElementById("canvas2"),
    e =
      (M.getBoundingClientRect(),
      t.getBoundingClientRect(),
      s.getBoundingClientRect()),
    w = Math.min(e.height, e.width / 2 - 16);
  switch (aspectRatio) {
    case "1":
      (M.width = w), (M.height = w / 2), (t.width = w), (t.height = w / 2);
      break;
    case "2":
      (M.width = w / 2), (M.height = w), (t.width = w / 2), (t.height = w);
      break;
    case "3":
      (M.width = w),
        (M.height = w / (16 / 9)),
        (t.width = w),
        (t.height = w / (16 / 9));
      break;
    default:
      (M.width = w), (M.height = w), (t.width = w), (t.height = w);
  }
}
let tut = 0;
function nextTut() {
  0 === tut
    ? ((document.querySelector(".t1").style.opacity = 0),
      (document.querySelector(".t2").style.opacity = 1),
      (document.querySelector("#tut2").style = "z-index: 10"),
      (document.querySelector("#tut1").style = "z-index: 0"))
    : 1 === tut &&
      (document.querySelector(".tutorial").classList.remove("visible"),
      localStorage.setItem("user", !0)),
    (tut += 1);
}
const user = localStorage.getItem("user");
let clone;
window.addEventListener("resize", adjust);
const isSafari =
  navigator.userAgent.search("Safari") >= 0 &&
  navigator.userAgent.search("Chrome") < 0;
function startTut() {
  document.querySelector("#welcome").classList.remove("visible");
  const s = document.querySelector(".tutorial"),
    M = document.querySelector("#tut1");
  document.querySelector("#tut2");
  s.classList.add("visible"), (M.style = "z-index: 1;");
}
let aspectRatio = localStorage.getItem("aspect-ratio") || 0;
function init() {
  (document.querySelector("#aspect-ratio").options[aspectRatio].selected =
    "selected"),
    document.querySelector("#aspect-ratio").addEventListener("change", s => {
      localStorage.setItem("aspect-ratio", s.target.value),
        src_c.destory(),
        dst_c.destory(),
        location.reload(),
        init();
    }),
    /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) &&
      document.querySelector(".mobile").classList.add("visible"),
    isSafari &&
      ((document.getElementById("info-dialog").style = "display: none"),
      document.querySelector(".showcase").classList.add("safari")),
    dialogPolyfill.registerDialog(document.getElementById("info-dialog"));
  const s = document.querySelector(".export-btn");
  s.addEventListener("click", () => {
    (s.href = document.getElementById("canvas3").toDataURL()),
      (s.download = "mesh-gradient.png");
  });
  const M = document.querySelector(".gallery__wrapper");
  g.forEach(s => {
    const t = new Image(),
      e = document.createElement("a");
    (e.href = s.hash),
      (t.src = "gallery/" + s.img),
      e.appendChild(t),
      M.appendChild(e);
  }),
    adjust(),
    user || document.querySelector("#welcome").classList.add("visible");
  const t = new URLSearchParams(window.location.search),
    e = t.get("w") ? JSON.parse(window.atob(t.get("w"))) : {};
  if (t.get("c"))
    try {
      const s = JSON.parse(window.atob(t.get("c")));
      colors = s;
    } catch (s) {
      console.log("err", s);
    }
  updateColors(),
    (warps = new Warps(
      e.s ? e.s.slice(0, e.p) : [],
      e.d ? e.d.slice(0, e.p) : [],
      e.p
    )),
    (src_c = new Canvas(
      warps.warps[0],
      document.getElementById("canvas1"),
      "canvas1"
    )),
    (dst_c = new Canvas(
      warps.warps[1],
      document.getElementById("canvas2"),
      "canvas2"
    )),
    (clone = new Canvas(
      warps.warps[1],
      document.getElementById("canvas3"),
      "canvas3",
      !0
    ));
  t.get("w") ||
    (() => {
      let s = [
        [-0.85, -0.9],
        [-0.95, 0.9],
        [0.85, -0.9],
        [0.95, 0.9]
      ];
      for (let M = 0; M < s.length; M++) {
        let t = s[M][0],
          e = s[M][1];
        warps.add_pair(0, t, e);
      }
    })(),
    warps.update(),
    redraw(),
    loop();
}
function changeColor(s) {
  (colors[s.target.getAttribute("data-gradient")] = s.target.value),
    updateUrl(),
    redraw();
}
function updateColors() {
  const s = document.querySelector(".btn-group");
  (s.innerHTML = ""),
    Object.keys(colors).forEach(M => {
      const t = colors[M],
        e = document.createElement("INPUT"),
        w = document.createElement("div");
      (e.value = t),
        (e.type = "color"),
        e.addEventListener("change", changeColor),
        e.setAttribute("data-gradient", M),
        w.setAttribute("aria-label", t.toUpperCase()),
        w.setAttribute("data-balloon-pos", "up"),
        w.appendChild(e),
        s.appendChild(w);
    });
}
let infoToggled = !1;
function cl(s) {
  const M = document.getElementById("info-dialog");
  var t = M.getBoundingClientRect();
  (t.top <= s.clientY &&
    s.clientY <= t.top + t.height &&
    t.left <= s.clientX &&
    s.clientX <= t.left + t.width) ||
    M.close();
}
function toggleInfo() {
  const s = document.getElementById("info-dialog");
  (infoToggled = !infoToggled)
    ? (s.showModal(),
      s.addEventListener("click", cl),
      isSafari &&
        (s.style =
          "display: block;position: absolute; left: 50%;transform: translateX(-50%)"))
    : (s.removeEventListener("click", cl),
      isSafari && (s.style = "display: none"),
      s.close());
}
function debounce(s, M = 100) {
  let t;
  return function(...e) {
    clearTimeout(t),
      (t = setTimeout(() => {
        s.apply(this, e);
      }, M));
  };
}
function togglePreview() {
  document.getElementById("canvas1").classList.add("hidden"),
    document.getElementById("draggable").classList.add("hidden");
}
function toggleEdit() {
  document.getElementById("canvas1").classList.remove("hidden"),
    document.getElementById("draggable").classList.remove("hidden");
}
window.addEventListener(
  "resize",
  debounce(() => location.reload(), 300)
);
let gallery = !0;
function toggleGallery() {
  gallery
    ? (document
        .querySelector("#submit-mesh")
        .setAttribute(
          "href",
          "mailto:burak@gradientmesh.com?subject=Check out my gradient! 🔥&body=Feature my gradient please! \n \n" +
            encodeURIComponent(document.URL)
        ),
      document.querySelector(".gallery").classList.add("open"))
    : document.querySelector(".gallery").classList.remove("open"),
    (gallery = !gallery);
}